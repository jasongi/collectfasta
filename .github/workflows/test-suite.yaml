name: Test Suite
on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
      GCLOUD_API_CREDENTIALS_BASE64:
        description: 'Base64 encoded GCloud API credentials'
        required: true
      AZURE_CONNECTION_STRING:
        description: 'Azure Storage Connection String'
        required: true
  push:
    branches:
      - master
  pull_request:
jobs:
  live-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']
        django-version: ['>=5.2,<5.3']
    name: Live test  on latest Python (${{ matrix.python-version }}) and latest Django (${{ matrix.django-version }})
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip
      - name: Install dependencies
        run: |
          pip install --upgrade django'${{ matrix.django-version }}'
          pip install --upgrade -r test-requirements.txt
          pip install .
      - name: Run tests against live env
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GCLOUD_API_CREDENTIALS_BASE64: ${{ secrets.GCLOUD_API_CREDENTIALS_BASE64 }}
          AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
        if: github.event_name == 'push' && github.repository == 'jasongi/collectfasta'
        run: coverage run -m pytest
  test-django-5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        django-version: ['>=4.2,<4.3', '>=5.1,<5.2', '>=5.2,<5.3']
    name: Test Python ${{ matrix.python-version }} Django ${{ matrix.django-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip
      - name: Install dependencies
        run: |
          pip install --upgrade django'${{ matrix.django-version }}'
          pip install --upgrade -r test-requirements.txt
          pip install .
      - name: Run tests against docker env
        run: make docker-up && coverage run -m pytest -svv --speedtest
  test-3-9:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
        django-version: ['>=4.2,<4.3']
    name: Test Python ${{ matrix.python-version }} Django ${{ matrix.django-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip
      - name: Install dependencies
        run: |
          pip install --upgrade django'${{ matrix.django-version }}'
          pip install --upgrade -r test-requirements.txt
          pip install .
      - name: Run tests against docker env
        run: make docker-up && coverage run -m pytest --speedtest
